// Inherited class; the Ui_ugpMainWindow might be changed by
// Qt Designer, so the relevant bindings must operate here

#ifndef MICROGPMAINWINDOW
#define MICROGPMAINWINDOW

#include "ui_ugp3.h"


namespace Ui 
{

// everything in the Ui_ugpMainWindow is public
// multiple inheritance requires QObject to be first
class MicroGPMainWindow : public QObject, public Ui_ugpMainWindow
{

Q_OBJECT

private:
	// pointer to main window
	QMainWindow* mainWindow;

	// name of the constraints file
	QString constraintsFile;
	// name of the population file
	QString populationFile;
	
	// list of labels for individual selection attributes
	QList<QLabel> individualSelectionLabels;
	// list of doubleSpinBox for individual selection attributes
	QList<QDoubleSpinBox> individualSelectionSpinBoxes;

public:
	// general setup, followed by all functions that set up the respective tabs
	void setupUi(QMainWindow* ugp3mainWindow);
	void setupTabConstraints();
	void setupTabPopulation();
	void setupTabEvolution();

	// adjust operator values
	void adjustOperatorTableValues();

// slot that will be connected to signals generated by objects
public slots:
	// TAB Constraints
	// load constraints file
	void loadConstraintsFile();
	// save and preview constraints file
	void previewConstraintsFile();
	// save constraints file
	void saveConstraintsFile();
	
	// TAB Population
	// add operators to table
	void addOperators();
	// change individual selection frame
	void changeIndividualSelectionFrame(int);
	// change population-specific settings frame
	void changePopulationSpecificFrame(int);
	// check coherence of QTableWidget
	void checkOperatorValues(int, int);
	// load population file
	void loadPopulationFile();
	// read population details from xml, but do not crash if errors are found
	void relaxedReadPopulationXml();
	// remove operator from table
	void removeOperators();
	// save population file
	void savePopulationFile();
	
	// TAB Evolution
	// add population to populations considered
	void addPopulation();
	// start evolution
	void startEvolution();
};

} // namespace Ui

#endif
