# Benchmark of various operator selection strategies

# Directories of the tests to use for the benchmark, and files that determine the outcome
tests:
  smart_sc4full_dmab:
    files: [eval.lua, compat_eval.lua, string-coverage.generator.pl,
      string-coverage.constraints.xml, string-coverage.population.xml,
      ugp3.settings.xml, params.txt]
    precmd: "perl string-coverage.generator.pl $seed"
  smart_sc4full_pdmab:
    files: [eval.lua, compat_eval.lua, string-coverage.generator.pl,
      string-coverage.constraints.xml, string-coverage.population.xml,
      ugp3.settings.xml, params.txt]
    precmd: "perl string-coverage.generator.pl $seed"
  smart_sc4full_kappa_0:
    files: [eval.lua, compat_eval.lua, string-coverage.generator.pl,
      string-coverage.constraints.xml, string-coverage.population.xml,
      ugp3.settings.xml, params.txt]
    precmd: "perl string-coverage.generator.pl $seed"
  smart_sc4full_kappa_1:
    files: [eval.lua, compat_eval.lua, string-coverage.generator.pl,
      string-coverage.constraints.xml, string-coverage.population.xml,
      ugp3.settings.xml, params.txt]
    precmd: "perl string-coverage.generator.pl $seed"
  smart_sc4full_kappa_5:
    files: [eval.lua, compat_eval.lua, string-coverage.generator.pl,
      string-coverage.constraints.xml, string-coverage.population.xml,
      ugp3.settings.xml, params.txt]
    precmd: "perl string-coverage.generator.pl $seed"
  smart_sc4full_kappa_10:
    files: [eval.lua, compat_eval.lua, string-coverage.generator.pl,
      string-coverage.constraints.xml, string-coverage.population.xml,
      ugp3.settings.xml, params.txt]
    precmd: "perl string-coverage.generator.pl $seed"

  steady_smart_sc4full_dmab:
    files: [eval.lua, compat_eval.lua, string-coverage.generator.pl,
      string-coverage.constraints.xml, string-coverage.population.xml,
      ugp3.settings.xml, params.txt]
    precmd: "perl string-coverage.generator.pl $seed"
  steady_smart_sc4full_pdmab:
    files: [eval.lua, compat_eval.lua, string-coverage.generator.pl,
      string-coverage.constraints.xml, string-coverage.population.xml,
      ugp3.settings.xml, params.txt]
    precmd: "perl string-coverage.generator.pl $seed"
  steady_smart_sc4full_kappa_0:
    files: [eval.lua, compat_eval.lua, string-coverage.generator.pl,
      string-coverage.constraints.xml, string-coverage.population.xml,
      ugp3.settings.xml, params.txt]
    precmd: "perl string-coverage.generator.pl $seed"
  steady_smart_sc4full_kappa_1:
    files: [eval.lua, compat_eval.lua, string-coverage.generator.pl,
      string-coverage.constraints.xml, string-coverage.population.xml,
      ugp3.settings.xml, params.txt]
    precmd: "perl string-coverage.generator.pl $seed"
  steady_smart_sc4full_kappa_5:
    files: [eval.lua, compat_eval.lua, string-coverage.generator.pl,
      string-coverage.constraints.xml, string-coverage.population.xml,
      ugp3.settings.xml, params.txt]
    precmd: "perl string-coverage.generator.pl $seed"
  steady_smart_sc4full_kappa_10:
    files: [eval.lua, compat_eval.lua, string-coverage.generator.pl,
      string-coverage.constraints.xml, string-coverage.population.xml,
      ugp3.settings.xml, params.txt]
    precmd: "perl string-coverage.generator.pl $seed"

  lambda_smart_sc4full_dmab:
    files: [eval.lua, compat_eval.lua, string-coverage.generator.pl,
      string-coverage.constraints.xml, string-coverage.population.xml,
      ugp3.settings.xml, params.txt]
    precmd: "perl string-coverage.generator.pl $seed"
  lambda_smart_sc4full_pdmab:
    files: [eval.lua, compat_eval.lua, string-coverage.generator.pl,
      string-coverage.constraints.xml, string-coverage.population.xml,
      ugp3.settings.xml, params.txt]
    precmd: "perl string-coverage.generator.pl $seed"
  lambda_smart_sc4full_kappa_0:
    files: [eval.lua, compat_eval.lua, string-coverage.generator.pl,
      string-coverage.constraints.xml, string-coverage.population.xml,
      ugp3.settings.xml, params.txt]
    precmd: "perl string-coverage.generator.pl $seed"
  lambda_smart_sc4full_kappa_1:
    files: [eval.lua, compat_eval.lua, string-coverage.generator.pl,
      string-coverage.constraints.xml, string-coverage.population.xml,
      ugp3.settings.xml, params.txt]
    precmd: "perl string-coverage.generator.pl $seed"
  lambda_smart_sc4full_kappa_5:
    files: [eval.lua, compat_eval.lua, string-coverage.generator.pl,
      string-coverage.constraints.xml, string-coverage.population.xml,
      ugp3.settings.xml, params.txt]
    precmd: "perl string-coverage.generator.pl $seed"
  lambda_smart_sc4full_kappa_10:
    files: [eval.lua, compat_eval.lua, string-coverage.generator.pl,
      string-coverage.constraints.xml, string-coverage.population.xml,
      ugp3.settings.xml, params.txt]
    precmd: "perl string-coverage.generator.pl $seed"

  # 
  # Other values of Kappa and other kinds of DMAB
  #
  # smart_sc4full_sa:
  #   files: [eval.lua, compat_eval.lua, string-coverage.generator.pl,
  #     string-coverage.constraints.xml, string-coverage.population.xml,
  #     ugp3.settings.xml, params.txt]
  #   precmd: "perl string-coverage.generator.pl $seed"
  # smart_sc4full_kappa_20:
  #   files: [eval.lua, compat_eval.lua, string-coverage.generator.pl,
  #     string-coverage.constraints.xml, string-coverage.population.xml,
  #     ugp3.settings.xml, params.txt]
  #   precmd: "perl string-coverage.generator.pl $seed"
  # smart_sc4full_random:
  #   files: [eval.lua, compat_eval.lua, string-coverage.generator.pl,
  #     string-coverage.constraints.xml, string-coverage.population.xml,
  #     ugp3.settings.xml, params.txt]
  #   precmd: "perl string-coverage.generator.pl $seed"
  # smart_sc4full_smooth:
  #   files: [eval.lua, compat_eval.lua, string-coverage.generator.pl,
  #     string-coverage.constraints.xml, string-coverage.population.xml,
  #     ugp3.settings.xml, params.txt]
  #   precmd: "perl string-coverage.generator.pl $seed"
  # steady_smart_sc4full_sa:
  #   files: [eval.lua, compat_eval.lua, string-coverage.generator.pl,
  #     string-coverage.constraints.xml, string-coverage.population.xml,
  #     ugp3.settings.xml, params.txt]
  #   precmd: "perl string-coverage.generator.pl $seed"
  # lambda_smart_sc4full_kappa_20:
  #   files: [eval.lua, compat_eval.lua, string-coverage.generator.pl,
  #     string-coverage.constraints.xml, string-coverage.population.xml,
  #     ugp3.settings.xml, params.txt]
  #   precmd: "perl string-coverage.generator.pl $seed"
  # lambda_smart_sc4full_random:
  #   files: [eval.lua, compat_eval.lua, string-coverage.generator.pl,
  #     string-coverage.constraints.xml, string-coverage.population.xml,
  #     ugp3.settings.xml, params.txt]
  #   precmd: "perl string-coverage.generator.pl $seed"
  # lambda_smart_sc4full_smooth:
  #   files: [eval.lua, compat_eval.lua, string-coverage.generator.pl,
  #     string-coverage.constraints.xml, string-coverage.population.xml,
  #     ugp3.settings.xml, params.txt]
  #   precmd: "perl string-coverage.generator.pl $seed"

  ## 
  ## Not smart, maybe less interesting
  ##
  #sc4full_dmab:
  #  files: [eval.lua, compat_eval.lua, string-coverage.generator.pl,
  #    string-coverage.constraints.xml, string-coverage.population.xml,
  #    ugp3.settings.xml, params.txt]
  #  precmd: "perl string-coverage.generator.pl $seed"
  #sc4full_sa:
  #  files: [eval.lua, compat_eval.lua, string-coverage.generator.pl,
  #    string-coverage.constraints.xml, string-coverage.population.xml,
  #    ugp3.settings.xml, params.txt]
  #  precmd: "perl string-coverage.generator.pl $seed"
  #sc4full_kappa_0:
  #  files: [eval.lua, compat_eval.lua, string-coverage.generator.pl,
  #    string-coverage.constraints.xml, string-coverage.population.xml,
  #    ugp3.settings.xml, params.txt]
  #  precmd: "perl string-coverage.generator.pl $seed"
  #sc4full_kappa_1:
  #  files: [eval.lua, compat_eval.lua, string-coverage.generator.pl,
  #    string-coverage.constraints.xml, string-coverage.population.xml,
  #    ugp3.settings.xml, params.txt]
  #  precmd: "perl string-coverage.generator.pl $seed"
  #sc4full_kappa_2:
  #  files: [eval.lua, compat_eval.lua, string-coverage.generator.pl,
  #    string-coverage.constraints.xml, string-coverage.population.xml,
  #    ugp3.settings.xml, params.txt]
  #  precmd: "perl string-coverage.generator.pl $seed"
  #sc4full_kappa_5:
  #  files: [eval.lua, compat_eval.lua, string-coverage.generator.pl,
  #    string-coverage.constraints.xml, string-coverage.population.xml,
  #    ugp3.settings.xml, params.txt]
  #  precmd: "perl string-coverage.generator.pl $seed"
  #sc4full_kappa_10:
  #  files: [eval.lua, compat_eval.lua, string-coverage.generator.pl,
  #    string-coverage.constraints.xml, string-coverage.population.xml,
  #    ugp3.settings.xml, params.txt]
  #  precmd: "perl string-coverage.generator.pl $seed"
  #sc4full_kappa_20:
  #  files: [eval.lua, compat_eval.lua, string-coverage.generator.pl,
  #    string-coverage.constraints.xml, string-coverage.population.xml,
  #    ugp3.settings.xml, params.txt]
  #  precmd: "perl string-coverage.generator.pl $seed"

# Names of the MicroGP executables to run
ugp_executables:
  - ./ugp3_camellia_r611

# Random seeds to use
# seeds: [1]
seeds: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40]

# Whether to show the full ugp output or only the generations
full_ugp_output: false
